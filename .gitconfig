[user]
  email = rpond@peopleadmin.com
  name = Randy Pond

[color]
  ui = always
  diff = auto

[format]
  pretty = %C(yellow)%h%Cred%d %Creset%s%Cblue [%cn]

[core]
  pager = less -X
  excludesfile = ~/.gitignore_global
  editor = vim

[apply]
  whitespace = nowarn

[merge]
  log = true

[alias]
  ; up = pull --rebase
  ; pr = pull --rebase
  f = fetch
  p = pull
  pr = pull --rebase
  graph = log --all --graph --decorate --oneline
  ls = log --decorate
  ll = log --decorate --stat --oneline
  lb = log --no-merges master.. --decorate --stat
  fl = "!git ls-files | grep -i"
  grep = grep -Ii --break --heading --line-number
  gr = grep -Ii --break --heading --line-number
  cp = cherry-pick
  st = status -s
  cl = clone
  ci = commit -v
  co = checkout
  com = checkout master
  logm = git log --no-merges master..
  rh = reset HEAD
  rhh = reset HEAD --hard
  rhs = reset HEAD --soft
  wc = whatchanged -p --abbrev-commit --pretty=medium
  wcb = whatchanged -p --abbrev-commit --pretty=medium master..
  br = branch
  bra = branch -a
  d = diff
  diff = diff --word-diff
  dc = diff --cached
  dch = diff --cached HEAD^
  check = diff --check
  sl = stash list
  sa = stash apply
  ss = stash save
  who = shortlog -n -s --no-merges
  # Remove submodules
  # From http://stackoverflow.com/questions/1260748/how-do-i-remove-a-git-submodule
  rmsub = "!f(){ git rm --cached \"$1\";rm -r \"$1\";git config -f .gitmodules --remove-section \"submodule.$1\";git config -f .git/config --remove-section \"submodule.$1\";git add .gitmodules; }; f"
  pullsub= !"git submodule foreach git pull origin master"
  # Finds


[push]
  default = upstream

[merge]
  keepBackup = false;
  tool = p4merge

[mergetool "p4merge"]
  cmd = p4merge "$BASE" "$LOCAL" "$REMOTE" "$MERGED"
  keepTemporaries = false
  trustExitCode = false
  keepBackup = false
